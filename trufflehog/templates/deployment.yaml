apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "trufflehog.fullname" . }}
  labels:
    {{- include "trufflehog.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "trufflehog.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "trufflehog.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- if .Values.priorityClass.create }}
      priorityClassName: trufflehog-enterprise
      {{- else if .Values.priorityClass.name }}
      priorityClassName: {{ .Values.priorityClass.name }}
      {{- else }}
      # no priority class, leave it up to the system
      {{- end }}
      volumes:
        - name: config-secret-volume
          secret:
            secretName: {{ .Values.config.secretName }}
      containers:
        - name: trufflehog
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          terminationMessagePolicy: FallbackToLogsOnError
          command: ["/usr/local/bin/scanner", "scan", "--config=/secret/config.yaml", "--port=8080"]
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: {{ .Values.probe.initialDelaySeconds }}
            periodSeconds: {{ .Values.probe.periodSeconds }}
          volumeMounts:
            - name: config-secret-volume
              mountPath: /secret/
          resources:
            requests:
              memory: "{{ .Values.resources.requests.memory }}"
              cpu: "{{ .Values.resources.requests.cpu }}"
              ephemeral-storage: "{{ .Values.resources.requests.ephemeralStorage }}"
            {{- if .Values.resources.limits.enabled }}
            limits:
              {{- if .Values.resources.limits.memory }}
              memory: "{{ .Values.resources.limits.memory }}"
              {{- end }}
              {{- if .Values.resources.limits.cpu }}
              cpu: "{{ .Values.resources.limits.cpu }}"
              {{- end }}
              {{- if .Values.resources.limits.ephemeralStorage }}
              ephemeral-storage: "{{ .Values.resources.limits.ephemeralStorage }}"
              {{- end }}
            {{- end }}